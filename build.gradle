buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:' + project.forgeGradleVersion
        classpath 'org.spongepowered:mixingradle:0.5-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'

group = 'io.github.rainyaphthyl'
version = project.modVersion

minecraft {
    version = project.mcVersion
    mappings = project.mcMappings
    runDir = "run"
}

sourceSets {
    main {
        ext.refMap = "mixins.${project.modPureName}.refmap.json"
    }
}

mixin {
    defaultObfuscationEnv notch
}

litemod {
    json {
        //noinspection GroovyAccessibility
        name = modId
        displayName = modName
        version = modVersion
        mcversion = mcVersion
        description = "Fix the multi-BGM overlapping bug."
        author = project.author
        mixinConfigs += "mixins.multibgmfix.json"
    }
}

jar {
    // The litemod task above generates the litemod.json dynamically, you can replace it with a resource if you want more control
    archivesBaseName = "${modPureName}"
    classifier = "mc${mcVersionOut}+${gradle.buildTag}"
    baseName = "mod-${archivesBaseName}"
    // Remove the "-mc1.12" suffix from the file name
    //classifier = ""
    // Don't append a 'mod-' filename prefix >_>
    //baseName = archivesBaseName
    from litemod.outputs
}


processResources {
    // Exclude the GIMP image files
    //exclude '**/*.xcf'
    //exclude '**/xcf'

    // this will ensure that this task is redone when the versions change.
    inputs.property 'modVersion', project.modVersion
    inputs.property 'mcVersion', project.mcVersion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'modVersion': project.modVersion, 'mcVersion': project.mcVersion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
